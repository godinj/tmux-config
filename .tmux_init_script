#!/Bin/zsh                                                                                                   

MW_SESSION_NAME="0_MW"
tmux has-session -t $MW_SESSION_NAME &> /dev/null
if [ $? != 0 ] 
 then
    tmux new-session -s $MW_SESSION_NAME -n script -d
    C="tmux send-keys -t $MW_SESSION_NAME.0 'km' ENTER && tmux a -t $MW_SESSION_NAME"
    tmux send-keys -t $MW_SESSION_NAME.0 "read -k '?Enable VPN, then press any key...' && km && dd -t '$C'" ENTER
fi

NINJA_SESSION_NAME="1_NINJA"
tmux has-session -t $NINJA_SESSION_NAME &> /dev/null
if [ $? != 0 ] 
 then
    tmux new-session -s $NINJA_SESSION_NAME -n script -d
    tmux send-keys -t $NINJA_SESSION_NAME.0 "read -k '?Enable VPN, km, then press any key...' && echo ninja" ENTER
fi

CONFIG_SESSION_NAME="2_CONFIG"
tmux has-session -t $CONFIG_SESSION_NAME &> /dev/null
if [ $? != 0 ] 
 then
    tmux new-session -s $CONFIG_SESSION_NAME -n script -d
    tmux send-keys -t $CONFIG_SESSION_NAME.0 "read -k '?Press any key...' && cd ~/.config/nvim/ && n" ENTER
    tmux new-window -t $CONFIG_SESSION_NAME
    tmux send-keys -t $CONFIG_SESSION_NAME.0 "read -k '?Press any key...' && cd ~/tmux-config/ && n" ENTER
fi

NOTES_SESSION_NAME="3_NOTES"
tmux has-session -t $NOTES_SESSION_NAME &> /dev/null
if [ $? != 0 ] 
 then
    tmux new-session -s $NOTES_SESSION_NAME -n script -d
    tmux send-keys -t $NOTES_SESSION_NAME.0 "cd ~/notes" ENTER
    tmux send-keys -t $NOTES_SESSION_NAME.0 "n ~/notes/common-commands" ENTER
fi

export PROJ1_D="PROJ1"
export PROJ2_D="PROJ2"

EDITOR_SESSION_NAME="4_EDITOR"
tmux has-session -t $EDITOR_SESSION_NAME &> /dev/null
if [ $? != 0 ] 
 then
    tmux new-session -s $EDITOR_SESSION_NAME -n script -d
    tmux send-keys -t $EDITOR_SESSION_NAME.0 "read -k '?Enable VPN, then press any key...' && cd ~/workplace/$PROJ1_D/src/ && n" ENTER
    tmux new-window -t $EDITOR_SESSION_NAME
    tmux send-keys -t $EDITOR_SESSION_NAME.0 "read -k '?Enable VPN, then press any key...' && cd ~/workplace/$PROJ2_D/src/ && n" ENTER
fi

CURR1_SESSION_NAME="5_PROJ1"
tmux has-session -t $CURR1_SESSION_NAME &> /dev/null
if [ $? != 0 ]
  then
    tmux new-session -s $CURR1_SESSION_NAME -n script -d
    tmux send-keys -t $CURR1_SESSION_NAME.0 "read -k '?Enable VPN, then press any key...' && dm" ENTER
    tmux new-window -t $CURR1_SESSION_NAME
    tmux wait-for -L my0\; \
      send-keys -t $CURR1_SESSION_NAME.0 'tmux split-window -v \; split-window -v \; select-layout even-vertical \; wait-for -U my0' Enter\; \
      wait-for -L my0\; \
      send-keys -t $CURR1_SESSION_NAME.0 'cd ~/workplace/$PROJ1_D/src/Package1; clear' Enter\; \
      send-keys -t $CURR1_SESSION_NAME.1 'cd ~/workplace/$PROJ1_D/src/Package2; clear' Enter\; \
      send-keys -t $CURR1_SESSION_NAME.2 'cd ~/workplace/$PROJ1_D/src/Package3; clear' Enter\;
    tmux wait-for -U my0
fi

CURR2_SESSION_NAME="6_PROJ2"
tmux has-session -t $CURR2_SESSION_NAME &> /dev/null
if [ $? != 0 ]
  then
    tmux new-session -s $CURR2_SESSION_NAME -n script -d
    tmux send-keys -t $CURR2_SESSION_NAME.0 "read -k '?Enable VPN, then press any key...' && dm" ENTER
    tmux new-window -t $CURR2_SESSION_NAME
    tmux wait-for -L my1\; \
      send-keys -t $CURR2_SESSION_NAME.0 'tmux split-window -v \; split-window -v \; select-layout even-vertical \; wait-for -U my1' Enter\; \
      wait-for -L my1\; \
      send-keys -t $CURR2_SESSION_NAME.0 'cd ~/workplace/$PROJ2_D/src/Package1; clear' Enter\; \
      send-keys -t $CURR2_SESSION_NAME.1 'cd ~/workplace/$PROJ2_D/src/Package2; clear' Enter\; \
      send-keys -t $CURR2_SESSION_NAME.2 'cd ~/workplace/$PROJ2_D/src/Package3; clear' Enter\;
    tmux wait-for -U my1
fi

if [ -z "$TMUX" ]
 then
    clear
    tmux attach -t $NOTES_SESSION_NAME
fi
